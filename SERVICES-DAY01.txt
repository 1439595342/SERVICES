搭建SERVICES教学环境

第一台虚拟机,一般作为服务端 ,虚拟机A

真机 快速产生一台虚拟机clone-vm7

[root@room9pc01 ~]# clone-vm7
Enter VM number: 5

1.将虚拟机的名字修改为A
2.以root用户登陆虚拟机A,密码为123456

虚拟机A要求:
3.配置永久的主机名:svr7.tedu.cn
[root@localhost ~]# echo svr7.tedu.cn  > /etc/hostname
[root@localhost ~]# hostname svr7.tedu.cn

4.配置eth0网卡 永久的IP地址: 192.168.4.7/24

5.检测防火墙是否开启,关闭防护墙
# systemctl status firewalld

6.检测SELinux是否开启,关闭SELinux
# getenforce 
Disabled



###############################################################
为虚拟机A搭建Yum仓库
[root@room9pc01 ~]# ssh -X root@192.168.4.7
root@192.168.4.7's password: 
Last login: Thu Mar 29 09:09:37 2018 from 192.168.4.254
[root@svr7 ~]# 
真机作为Yum服务端
1.利用FTP共享光盘所有内容
[root@room9pc01 ~]# rpm -q vsftpd            #安装软件包
vsftpd-3.0.2-22.el7.x86_64

[root@room9pc01 ~]# systemctl status vsftpd  #查看服务是否开启

默认共享的路径:/var/ftp

# firefox ftp://192.168.4.254/rhel7

# mkdir /var/ftp/rhel7
# mount /var/lib/libvirt/images/iso/rhel-server-7.4-x86_64-dvd.iso   /var/ftp/rhel7

[root@room9pc01 ~]# vim /etc/fstab 
/var/lib/libvirt/images/iso/rhel-server-7.4-x86_64-dvd.iso  /var/ftp/rhel7 iso9660 defaults 0 0

虚拟机A作为Yum客户端
[root@svr7 ~]# vim /etc/yum.repos.d/dvd.repo
[rhel7]
name=dvd
baseurl=ftp://192.168.4.254/rhel7
enabled=1
gpgcheck=0
[root@svr7 ~]# yum -y install mariadb-server

################################################################
扩展的几个应用


[root@svr7 ~]# man hier


常见一级目录的用途
主要用途
  /boot         存放系统引导必需的文件,包括内核、启动配置
  /bin、/sbin   存放各种命令程序
  /dev          存放硬盘、键盘、鼠标、光驱等各种设备文件
  /etc          存放Linux系统及各种程序的配置文件
  /root、/home/ 用户名 分别是管理员root、普通用户的默认家目录
  /var          存放日志文件、邮箱目录等经常变化的文件
  /proc         存放内存中的映射数据,不占用磁盘
  /tmp          存放系统运行过程中使用的一些临时文件


#################################################
虚拟机A操作
 权限的数值表示,  利用 4  2  1 三个数字表示 r  w  x

 [root@svr7 ~]# mkdir /nsd01
 [root@svr7 ~]# ls -ld /nsd01

 [root@svr7 ~]# chmod 700 /nsd01
 [root@svr7 ~]# ls -ld /nsd01

 [root@svr7 ~]# chmod 007 /nsd01
 [root@svr7 ~]# ls -ld /nsd01

 [root@svr7 ~]# chmod 750 /nsd01
 [root@svr7 ~]# ls -ld /nsd01

#####################################################

历史命令
• 管理/调用曾经执行过的命令
– history:查看历史命令列表
– history -c:清空历史命令
– !str:执行最近一次以str开头的历史命令


• 调整历史命令的数量
[root@svr7 ~]# vim /etc/profile
HISTSIZE=1000               //默认记录1000条

[root@svr7 ~]# history 

[root@svr7 ~]# history -c

[root@svr7 ~]# cat  /etc/redhat-release

[root@svr7 ~]# history

[root@svr7 ~]# !cat

###########################################################

• du,统计文件的占用空间
– du [选项]... [目录或文件]...

– -s:只统计每个参数所占用的总空间大小
– -h:提供易读容量单位(K、M等)

[root@svr7 ~]# du -sh /root/  /etc/  /home/
1.5G	/root/
43M	/etc/
12K	/home/


zip归档工具,跨平台的压缩工具

• 归档+压缩操作
– zip [-r]  备份文件.zip  被归档的文档...


• 释放归档+解压操作
– unzip  备份文件.zip  [-d 目标文件夹]


[root@svr7 ~]# zip -r /opt/test.zip /home/ /mnt/


[root@svr7 ~]# mkdir /nsd
[root@svr7 ~]# unzip /opt/test.zip -d /nsd
[root@svr7 ~]# ls /nsd

##################################################################

  5:显示配置文件的帮助信息


[root@svr7 ~]# man 5 passwd


##############################################################
实用小命令工具
• ln,创建软连接
– 软连接 --> 原始文档 --> i节点 --> 文档数据
– ln -s 原始文件或目录 软连接文件
若原始文件或目录被删除,连接文件将失效
软连接可存放在不同分区/文件系统


• ln,创建硬连接
– 硬连接 --> i节点 --> 文档数据
– ln 原始文件 硬连接文件
若原始文件被删除,连接文件仍可用
硬连接与原始文件必须在同一分区/文件系统


制作快捷方式
  格式:  ln  -s    /路径/源文件     /路径/快捷方式名称

[root@svr7 ~]# cat /etc/redhat-release 

[root@svr7 ~]# ln -s /etc/redhat-release  /abc
[root@svr7 ~]# ls -l /abc 

[root@svr7 ~]# cat /abc


  i节点: 硬盘上文件唯一的编号


################################################################
 只有硬连接,不会产生新的文件
[root@svr7 ~]# rm -rf /opt/*
[root@svr7 ~]# echo 123 > /opt/A
[root@svr7 ~]# cat /opt/A

[root@svr7 ~]# ln -s /opt/A /opt/A1      #制作软连接
[root@svr7 ~]# ls /opt/
[root@svr7 ~]# ls -l /opt/A1

[root@svr7 ~]# ln /opt/A /opt/A2         #制作硬连接
[root@svr7 ~]# ls /opt/
[root@svr7 ~]# cat /opt/A2

[root@svr7 ~]# cp /opt/A /opt/A3
[root@svr7 ~]# ls /opt/
[root@svr7 ~]# cat /opt/A3

[root@svr7 ~]# ls -i /opt       #查看文件 i节点 编号

##################################################################
自定义yum仓库

1.有光盘之外的包
2.将真机tools文件夹,传递到虚拟机A根目录下
 真机上实现
 # scp   -r   /root/桌面/tools   root@192.168.4.7:/

3.到虚拟机A验证
 # ls /
 # ls /tools

4.生成仓库数据文件
[root@svr7 ~]# createrepo /tools/other/
[root@svr7 ~]# ls /tools/other/

5.修改配置文件/etc/yum.repos.d/dvd.repo
[root@svr7 ~]# vim /etc/yum.repos.d/dvd.repo 
[rhel7]
name=dvd
baseurl=ftp://192.168.4.254/rhel7
enabled=1
gpgcheck=0

[myrpm]
name=myrpm
baseurl=file:///tools/other
enabled=1
gpgcheck=0

[root@svr7 ~]#  yum repolist

##############################################################
 显示已安装软件包的安装清单

 rpm  -ql  软件名 

##############################################################

vim编辑技巧

 命令模式操作  

[root@svr7 ~]# head -6 /etc/passwd > /opt/abc.txt
[root@svr7 ~]# vim /opt/abc.txt 
光标跳转
	Home键 或 ^	 跳转到行首
	End键 或“$”键 	跳转到行尾
	1G 或 gg 		跳转到文件的首行
	G 			跳转到文件的末尾行

复制/粘贴/删除
	yy、#yy 		复制光标处的一行、#行
	粘贴 p 		粘贴到光标处之后、之前
	x 或 Delete键   删除光标处的单个字符
	dd、#dd 		删除光标处的一行、#行
	d^ 			从光标处之前删除至行首
	d$ 			从光标处删除到行尾
	C(大写的) 	从光标处删除到行尾,并且进入输入模式


查找/撤销/保存
	/word 	  向后查找字符串“word”
	n、N 	  跳至后/前一个结果
	u 		  撤销最近的一次操作
	Ctrl + r   取消前一次撤销操作
	ZZ 		  保存修改并退出


末行模式操作

	:q! 					放弃已有更改后强制退出
	:wq 或 :x 			保存已有修改后退出
	:r /etc/filesystems 	读入其他文件内容

[root@svr7 ~]# echo 123 > /opt/1.txt
[root@svr7 ~]# echo abc > /opt/2.txt
[root@svr7 ~]# vim /opt/2.txt

         	:r /etc/redhat-release 	#读入其他文件内容
         	:r /opt/1.txt 			#读入其他文件内容


字符串替换
	:s/old/new 		替换当前光标所在行第一个“old”
	:s/old/new/g 		替换当前光标所在行所有的“old”
	:n,m s/old/new/g 	替换第n-m行所有的“old”
	:% s/old/new/g 	替换文件内所有的“old

[root@svr7 ~]# head -10 /etc/passwd > /opt/abc.txt
[root@svr7 ~]# vim /opt/abc.txt

	    :s/root/admin/  
	    :s/root/admin/g            
	    :1,8 s/root/admin/g
	    :%s /root/admin/g

开关参数的控制
	:set nu 或 nonu 	显示/不显示行号
	:set ai 或 noai 	启用/关闭自动缩进


 vim不允许多终端,打开同一个文件
 vim不能创建目录

############################################################
源码编译安装

  rpm包------->rpm  yum----->安装

   源码包------gcc make-------> 可以执行的程序--------->运行安装

• 主要优点
– 获得软件的最新版,及时修复bug
– 软件功能可按需选择/定制,有更多软件可供选择
– 源码包适用各种平台

步骤1:安装gcc 与 make开发工具
[root@svr7 ~]# yum  -y  install  gcc   make

步骤2:tar解包,释放源代码至指定目录
[root@svr7 ~]# tar -xf /tools/inotify-tools-3.13.tar.gz -C /opt/
[root@svr7 ~]# ls /opt/
[root@svr7 ~]# ls /opt/inotify-tools-3.13/

[root@svr7 ~]# cd /opt/inotify-tools-3.13/

步骤3: ./configure 配置,指定安装目录/功能模块等选项
    作用1: 指定安装目录/功能模块等选项
    作用2: 检测本机是否安装gcc与make

[root@svr7 ~]# cd /opt/inotify-tools-3.13/
[root@svr7 inotify-tools-3.13]# ./configure --prefix=/mnt/myrpm

报错提示:没有安装gcc
checking for gcc... no
checking for cc... no
checking for cl.exe... no

步骤4: make 编译,生成可执行的二进制程序文件
[root@svr7 inotify-tools-3.13]# make 
 
步骤5: make install 安装,将编译好的文件复制到安装目录
[root@svr7 inotify-tools-3.13]# make install
[root@svr7 inotify-tools-3.13]# ls /mnt/myrpm/
bin  include  lib  share
################################################################

systemctl控制

[root@svr7 /]# systemctl restart  服务名    #重起服务
[root@svr7 /]# systemctl enable   服务名     #设置服务开机自启动


[root@svr7 /]# systemctl status   服务名     #查看服务当前的状态
[root@svr7 /]# systemctl start    服务名  
[root@svr7 /]# systemctl stop     服务名  
[root@svr7 /]# systemctl disable   服务名   #设置服务开机不再自启动

模式控制

     字符模式: multi-user.target 

     图形模式: graphical.target

• 切换到文本/图形模式
– systemctl isolate multi-user.target
– systemctl isolate graphical.target

• 查看默认模式
– systemctl get-default
• 设置默认模式
– systemctl set-default multi-user.target
– systemctl set-default graphical.target

[root@svr7 /]# systemctl isolate graphical.target      #当前临时切换
[root@svr7 /]# reboot

[root@svr7 /]# systemctl set-default graphical.target  #修改默认
[root@svr7 /]# systemctl get-default                   #查看默认模式
[root@svr7 /]# reboot 

#################################################################





































